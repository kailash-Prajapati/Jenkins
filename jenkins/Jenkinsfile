pipeline {
    agent {
        label 'devops'
    }
    environment  {
        SCANNER_HOME=tool 'sonar-scanner'
    }
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        stage('Checkout from Git') {
            steps {
                git url:'https://github.com/kailash-Prajapati/Jenkins.git', branch:'dockerci'
            }
        }
        stage('Sonarqube Analysis ') {
            steps {
                dir('src') {
                    withSonarQubeEnv('sonar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=docker-ci-project \
                        -Dsonar.projectKey=docker-ci-project '''
                    }
                }
            }
        }
        stage('QualityGate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token' 
                }
            }
        }
        stage('OWASP Scan') {
            steps {
                dir('src/') {
                    dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit', odcInstallation: 'DP-check'
                    dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
                }
            }
        }
        stage('TrivyFScan') {
            steps {
                dir('src/') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        stage("Image Create") {
            steps {
                script {
                    sh 'docker build -t dockerci .'

                }
            }
        }
        // stage("ImagePush") {
        //     steps {
        //         script {
        //             withCredentials([usernamePassword(credentialsId: 'docker-repo-creds', usernameVariable: 'docker_user', passwordVariable: 'docker_pass')]) {
        //             sh "docker tag finexo ${env.docker_user}/finexo:${BUILD_NUMBER}"
        //             sh "docker login -u ${env.docker_user} -p ${env.docker_pass}"
        //             sh "docker push ${env.docker_user}/finexo:${BUILD_NUMBER}"
        //             }
        //         }
        //     }
        // }
        // stage("ImageScan") {
        //     steps {
        //         sh 'trivy image prateekkumawat/finexo:${BUILD_NUMBER} > trivyimage_${BUILD_NUMBER}.txt' 
        //     }
        // }
    }
}